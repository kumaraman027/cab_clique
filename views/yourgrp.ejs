






















<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Group Page</title>
    <link rel="stylesheet" href="styles/style33.css">
    <style>
        .modal {
            display: none;
            position: fixed;
            z-index: 1;
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            overflow: auto;
            background-color: rgba(0,0,0,0.4);
        }
        .modal-content {
            background-color: #fefefe;
            margin: 15% auto;
            padding: 20px;
            border: 1px solid #888;
            width: 80%;
        }
        .close {
            color: #aaa;
            float: right;
            font-size: 28px;
            font-weight: bold;
        }
        .close:hover, .close:focus {
            color: black;
            text-decoration: none;
            cursor: pointer;
        }
    </style>
</head>
<body>
    <nav class="navbar">
        <div class="navbar-left">
            <img src="styles/pngwing.com.png" alt="Logo" class="logo">
        </div>
        <div class="navbar-right">
            <button id="homebutton" class="btn-profile">Home</button>
            <button>
                <div class="greeting">Hey, <%= username %>!</div>
                <div class="profile-container">
                    <img src="<%= profilepic %>" alt="Profile Picture" class="profile-pic" />
                </div>
            </button>
            <button id="creategroup" class="btn-create">Create</button>
        </div>
    </nav>

    <script>
        document.getElementById("creategroup").addEventListener("click", function() {
            window.location.href = "/group";
        });
        document.getElementById("homebutton").addEventListener("click", function() {
            window.location.href = "/";
        });
    </script>

    <div class="filter">
        <label for="origin">From:</label>
        <input type="text" id="origin" placeholder="Enter origin...">
        <label for="destination">To:</label>
        <input type="text" id="destination" placeholder="Enter destination...">
        <button onclick="filterBoxes()">Filter</button>
    </div>
    
    <div class="container">
        <% data.forEach(entry => { %>
            <div class="tab1" id="entry-<%= entry.id %>">
                <div class="part1">
                    <% if (entry.type == 'auto') { %>
                        <img class="imgauto" src="styles/Screenshot_2024-03-18_182109-removebg-preview (8).png" class="img7">
                    <% } else if(entry.type === 'car') { %>
                        <img class="imgcar" src="styles/car.png" class="img7">
                    <% } %>
                </div>
                <div class="part2">
                    <p>
                        Vacancy: <%= entry.vacancy %><br>
                        Time: <%= entry.time %><br>
                        From: <%= entry.from_location %><br>
                        To: <%= entry.to_location %><br>
                        Date: <%= entry.date ? entry.date.toString().substring(0, 15) : 'N/A' %><br>


                        Type: <%= entry.type %><br>
                    </p>
                </div>
                <!-- <button class="btn-join" onclick="openEditModal('<%=entry.id%>')">Edit</button> -->
                <button class="btn-join" onclick="deleteEntry('<%= entry.id %>')">Delete</button>
            </div>
        <% }); %>
    </div>
    
    <script>
        let currentEditId = null;

        function openEditModal(id) {
            currentEditId = id;

            // Get the current entry's data and populate the modal
            const entryDiv = document.getElementById(`entry-${id}`);
            const vacancy = entryDiv.querySelector(".part2").innerText.match(/Vacancy: (\d+)/)[1];
            const time = entryDiv.querySelector(".part2").innerText.match(/Time: (.+)/)[1].split("\n")[0];
            const from = entryDiv.querySelector(".part2").innerText.match(/From: (.+)/)[1].split("\n")[0];
            const to = entryDiv.querySelector(".part2").innerText.match(/To: (.+)/)[1].split("\n")[0];
            const date = entryDiv.querySelector(".part2").innerText.match(/Date: (.+)/)[1].split("\n")[0];
            const type = entryDiv.querySelector(".part2").innerText.match(/Type: (.+)/)[1].split("\n")[0];

            document.getElementById("editVacancy").value = vacancy;
            document.getElementById("editTime").value = time;
            document.getElementById("editFrom").value = from;
            document.getElementById("editTo").value = to;
            document.getElementById("editDate").value = date;
            document.getElementById("editType").value = type;

            document.getElementById('editModal').style.display = 'block';
        }

        function closeEditModal() {
            document.getElementById('editModal').style.display = 'none';
        }

        function submitEdit() {
    // Get the updated values from the form
    const updatedVacancy = document.getElementById("editVacancy").value;
    const updatedTime = document.getElementById("editTime").value;
    const updatedFrom = document.getElementById("editFrom").value;
    const updatedTo = document.getElementById("editTo").value;
    const updatedDate = document.getElementById("editDate").value;
    const updatedType = document.getElementById("editType").value;
    
    // Confirm the vacancy value for debugging
    alert(updatedVacancy);
    
    // Send the updated data to the server
    fetch('/edit', {
        method: 'PUT',
        headers: {
            'Content-Type': 'application/json',
        },
        body: JSON.stringify({
            vacancy: updatedVacancy, // corrected to use updatedVacancy variable
            time: updatedTime,
            from_location: updatedFrom,
            to_location: updatedTo,
            date: updatedDate,
            type: updatedType,
        })
    })
    .then(response => response.json())
    .then(data => {
        if (data.success) {
            // Update the HTML with the new data
            const entryDiv = document.getElementById(`entry-${currentEditId}`); // ensure currentEditId is defined
            if (entryDiv) {
                entryDiv.querySelector(".part2").innerHTML = `
                    Vacancy: ${updatedVacancy}<br>
                    Time: ${updatedTime}<br>
                    From: ${updatedFrom}<br>
                    To: ${updatedTo}<br>
                    Date: ${updatedDate}<br>
                    Type: ${updatedType}<br>
                `;
            }
            closeEditModal();
            alert('Entry updated successfully');
        } else {
            alert('Failed to update entry');
        }
    })
    .catch(error => console.error('Error:', error));
}

        function deleteEntry(id) {
            if (confirm('Are you sure you want to delete this entry?')) {
                // Send DELETE request to the server
                fetch(`/delete-entry/${id}`, {
                    method: 'DELETE',
                    headers: {
                        'Content-Type': 'application/json',
                    }
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        // If successfully deleted, remove the div from the page
                        document.getElementById(`entry-${id}`).remove();
                        alert('Entry deleted successfully');
                    } else {
                        alert('Failed to delete entry');
                    }
                })
                .catch(error => console.error('Error:', error));
            }
        }

        function filterBoxes() {
            var origin = document.getElementById('origin').value.toLowerCase();
            var destination = document.getElementById('destination').value.toLowerCase();
            var tabs = document.querySelectorAll('.tab1');

            tabs.forEach(tab => {
                var from = tab.querySelector('.part2').innerText.toLowerCase();
                var to = from.split('to:')[1].trim(); 
                
                if (from.includes(origin) && !to.includes(origin) && from.includes(destination)) {
                    tab.style.display = 'block';
                } else {
                    tab.style.display = 'none';
                }
            });
        }

        document.getElementById("creategroup").addEventListener("click", function() {
            window.location.href = "/group";
        });
        document.getElementById("homebutton").addEventListener("click", function() {
            window.location.href = "/";
        });

        document.addEventListener('keydown', function(event) {
            if (event.key === 'Enter') {
                filterBoxes();
            }
        });
    </script>

    <!-- Edit Modal -->
    <div id="editModal" class="modal">
        <div class="modal-content">
            <span class="close" onclick="closeEditModal()">&times;</span>
            <h2>Edit Entry</h2>
            <form id="editForm">
                <label for="editVacancy">Vacancy:</label>
                <input type="text" id="editVacancy"><br>
                <label for="editTime">Time:</label>
                <input type="text" id="editTime"><br>
                <label for="editFrom">From:</label>
                <input type="text" id="editFrom"><br>
                <label for="editTo">To:</label>
                <input type="text" id="editTo"><br>
                <label for="editDate">Date:</label>
                <input type="text" id="editDate"><br>
                <label for="editType">Type:</label>
                <input type="text" id="editType"><br>
                <button type="button" onclick="submitEdit()">Save Changes</button>
            </form>
        </div>
    </div>
</body>
</html>
